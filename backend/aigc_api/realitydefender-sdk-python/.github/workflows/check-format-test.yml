name: Format, check, and test Python SDK

on:
  workflow_call:
    inputs:
      is-release:
        default: false
        type: boolean
        description: Whether this is a release run or not.

jobs:
  check-format-test-python-sdk:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Sync
        run: |
          uv sync --all-extras --dev

      - name: Lint with Ruff
        run: |
          uv run ruff check

      - name: Type check with mypy
        run: |
          uv run mypy src tests examples

      - name: Test with pytest
        run: |
          uv run pytest tests/ --cov=realitydefender --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: python
          name: python-sdk-codecov
          fail_ci_if_error: ${{ inputs.is-release }}

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}